class CdrAnalysis < Prawn::Document
  def initialize(cdr)
    super(top_margin: 40)
    @cdr = cdr
    analysis_header
    line_items
    pagination
  end

  def analysis_header
    image "#{Rails.root}/app/assets/images/Logo coral 13-white.png", :position => :left, :height => 50, :width => 50

    text_box "Mobile Number: #{@cdr.mobile_no}", :size => 8, :at=> [75,720]
    text_box "Name : #{@cdr.name}", :size => 8, :at=> [75,710]
    text_box "Address: #{Sdr.find_by_mobile_number(@cdr.mobile_no).address}", :size => 8, :at=> [75,700]
    text_box "Report Generated By: #{@cdr.user.name.upcase}", :size => 8, :at=> [75,680]
    text_box "Police station: #{@cdr.user.branch.upcase},", :size => 8, :at => [75, 670]
    text_box "C.R. Number: #{@cdr.case_no}", :size => 8, :at=> [75,660]
    text_box "Report Generated Date: #{@cdr.created_at.strftime("%b %d %I:%M %p")}", :size => 8, :at=> [75,650]
    
  end

  def line_items
    move_down 50
    text_box "Cell Out Frequency", size: 9, style: :bold, :at=> [50,625]
    table(out_going_frequency, :header => true, 
                               :row_colors => ["DDDDDD", "FFFFFF"], 
                               :cell_style => { :size => 8},
                               :column_widths => [100, 100, 160, 80],
                               :position => :center)
  end

  def out_going_frequency
    out_going_cdrs = @cdr.cdr_records.get_frequency('MO').group("called_number")
    
    [["Calling Number", "Called Number", 'Operator', "Frequency"]] +
    out_going_cdrs.count.sort {|x,y| y[1] <=> x[1] }.map do |map|
      operator = list_operator(map[0])
      [@cdr.mobile_no, map[0], operator, map[1]]
    end
  end

  def pagination
    string = "page <page> of <total>"
    options = { :at => [bounds.right - 150, 0],
    :width => 150,
    :align => :right,
    :page_filter => (1..7),
    :start_count_at => 1,
    :color => "333333" }
    number_pages string, options
  end

  def get_initial_mobile_number_digit(mobile_number)
    mobile_number = mobile_number.size.eql?(12) ? mobile_number[2..11] : mobile_number
    return mobile_number[0..3]
  end

  def list_operator(mobile_number)
    msc_code = Msc.find_by_code(get_initial_mobile_number_digit(mobile_number))
    detail = msc_code.nil? ? 'NA' : "#{msc_code.try(:operator)}-#{msc_code.try(:circle)}"
    return detail
  end
end